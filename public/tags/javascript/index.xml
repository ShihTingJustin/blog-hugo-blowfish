<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on 賈斯丁前端之路</title><link>http://localhost:1313/tags/javascript/</link><description>Recent content in JavaScript on 賈斯丁前端之路</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>© 2024</copyright><lastBuildDate>Thu, 17 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Useful Resources</title><link>http://localhost:1313/notes/2023-08-17-useful-resources/</link><pubDate>Thu, 17 Aug 2023 00:00:00 +0000</pubDate><guid>http://localhost:1313/notes/2023-08-17-useful-resources/</guid><description>&lt;h1 class="relative group">Useful Resources
&lt;div id="useful-resources" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#useful-resources" aria-label="定位點">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;h3 class="relative group">技能樹
&lt;div id="%E6%8A%80%E8%83%BD%E6%A8%B9" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%E6%8A%80%E8%83%BD%E6%A8%B9" aria-label="定位點">#&lt;/a>
&lt;/span>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://roadmap.sh/" target="_blank">Developer Roadmaps&lt;/a>&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/notes/2023-08-17-useful-resources/featured-meta-image.png"/></item><item><title>JavaScript V8 Engine</title><link>http://localhost:1313/notes/2023-04-19-js-v8-engine/</link><pubDate>Wed, 19 Apr 2023 00:00:00 +0000</pubDate><guid>http://localhost:1313/notes/2023-04-19-js-v8-engine/</guid><description>&lt;p>V8 is Google’s open source high-performance JavaScript and WebAssembly engine, written in C++. It is used in Chrome and in Node.js, among others. It implements ECMAScript and WebAssembly, and runs on Windows 7 or later, macOS 10.12+, and Linux systems that use x64, IA-32, ARM, or MIPS processors. V8 can run standalone, or can be embedded into any C++ application.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/notes/2023-04-19-js-v8-engine/featured-meta-image.png"/></item><item><title>Deep Copy in JavaScript</title><link>http://localhost:1313/notes/2022-11-02-deep-copy/</link><pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate><guid>http://localhost:1313/notes/2022-11-02-deep-copy/</guid><description>Some methods to deep copy an object in JavaScript</description></item><item><title>Web Workers</title><link>http://localhost:1313/notes/2022-11-02-web-workers/</link><pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate><guid>http://localhost:1313/notes/2022-11-02-web-workers/</guid><description>Web Workers 是 JavaScript 的多執行緒解決方案</description></item><item><title>[Leetcode with JavaScript] 刷題筆記 — 特殊方法 Cyclic Sort</title><link>http://localhost:1313/posts/2020-09-10-leetcode-442-cyclic-sort/</link><pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/2020-09-10-leetcode-442-cyclic-sort/</guid><description>這是最近刷 Leetcode 學習到的特殊方法，適合在需要排序且題目要求 in-place，也就是空間複雜度 O(1) 的狀況下使用(使用的記憶體不會隨輸入資料增加而增加)</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/2020-09-10-leetcode-442-cyclic-sort/featured-meta-image.png"/></item><item><title>[Leetcode with JavaScript] 刷題筆記 — 特殊方法 Floyd's Cycle Detection</title><link>http://localhost:1313/posts/2020-09-06-leecode-287-floyd-cycle/</link><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/2020-09-06-leecode-287-floyd-cycle/</guid><description>這是最近刷 Leetcode 學習到的特殊方法，適合拿來解尋找重複數字的題目。</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/2020-09-06-leecode-287-floyd-cycle/featured-meta-image.png"/></item><item><title>[Leetcode with JavaScript] 刷題筆記 - 刷題常用的三種解法 Brute Force, Hash Map, Two Pointers</title><link>http://localhost:1313/posts/2020-08-30-leetcode-popular-approach/</link><pubDate>Sun, 30 Aug 2020 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/2020-08-30-leetcode-popular-approach/</guid><description>這篇文章會透過上千題中 Leetcode 的第一題 Two Sum 及進階題 3Sum，來說明三種基本的解題方法，分別是暴力解(Brute Force)、雜湊表 Hash Table、雙指針 Two Pointers。</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/posts/2020-08-30-leetcode-popular-approach/featured-meta-image.png"/></item></channel></rss>